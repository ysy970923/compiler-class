Terminals unused in grammar

    '/'
    '%'


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: $@1 ext_def_list

    3 ext_def_list: ext_def_list ext_def
    4             | %empty

    5 ext_def: type_specifier pointers ID ';'
    6        | type_specifier pointers ID '[' INTEGER_CONST ']' ';'
    7        | func_decl ';'
    8        | type_specifier ';'

    9 $@2: %empty

   10 ext_def: func_decl $@2 compound_stmt

   11 type_specifier: TYPE
   12               | VOID
   13               | struct_specifier

   14 @3: %empty

   15 @4: %empty

   16 struct_specifier: STRUCT ID '{' @3 def_list @4 '}'
   17                 | STRUCT ID

   18 func_decl: type_specifier pointers ID '(' ')'

   19 @5: %empty

   20 func_decl: type_specifier pointers ID '(' @5 real_param_list ')'

   21 pointers: '*'
   22         | %empty

   23 real_param_list: param_list
   24                | VOID

   25 param_list: param_decl
   26           | param_list ',' param_decl

   27 param_decl: type_specifier pointers ID
   28           | type_specifier pointers ID '[' INTEGER_CONST ']'

   29 def_list: def_list def
   30         | %empty

   31 def: type_specifier pointers ID ';'
   32    | type_specifier pointers ID '[' INTEGER_CONST ']' ';'
   33    | type_specifier ';'
   34    | func_decl ';'

   35 $@6: %empty

   36 compound_stmt: '{' local_defs $@6 stmt_list '}'

   37 local_defs: def_list

   38 stmt_list: stmt_list stmt
   39          | %empty

   40 stmt: expr ';'
   41     | compound_stmt
   42     | RETURN ';'

   43 $@7: %empty

   44 stmt: RETURN $@7 expr ';'
   45     | ';'
   46     | if_stmt

   47 $@8: %empty

   48 stmt: if_stmt ELSE $@8 stmt

   49 @9: %empty

   50 $@10: %empty

   51 stmt: WHILE @9 '(' expr ')' $@10 stmt

   52 $@11: %empty

   53 @12: %empty

   54 $@13: %empty

   55 $@14: %empty

   56 stmt: FOR $@11 '(' expr_e ';' @12 expr_e ';' $@13 expr_e ')' $@14 stmt
   57     | BREAK ';'
   58     | CONTINUE ';'
   59     | WRITE_INT '(' unary ')' ';'
   60     | WRITE_CHAR '(' unary ')' ';'
   61     | WRITE_STRING '(' unary ')' ';'

   62 @15: %empty

   63 $@16: %empty

   64 if_stmt: IF @15 '(' expr ')' $@16 stmt

   65 expr_e: expr
   66       | %empty

   67 $@17: %empty

   68 expr: unary $@17 '=' expr
   69     | or_expr

   70 or_expr: or_list

   71 or_list: or_list LOGICAL_OR and_expr
   72        | and_expr

   73 and_expr: and_list

   74 and_list: and_list LOGICAL_AND binary
   75         | binary

   76 binary: binary RELOP binary
   77       | binary EQUOP binary
   78       | binary '+' binary
   79       | binary '-' binary
   80       | unary

   81 unary: '(' expr ')'
   82      | '(' unary ')'
   83      | INTEGER_CONST
   84      | CHAR_CONST
   85      | STRING
   86      | ID
   87      | NULL_
   88      | '-' unary
   89      | '!' unary
   90      | unary INCOP
   91      | unary DECOP
   92      | INCOP unary
   93      | DECOP unary
   94      | '&' unary
   95      | '*' unary
   96      | unary '[' expr ']'
   97      | unary '.' ID
   98      | unary STRUCTOP ID

   99 @18: %empty

  100 unary: unary '(' @18 args ')'
  101      | unary '(' ')'
  102      | READ_INT '(' ')'
  103      | READ_CHAR '(' ')'

  104 args: expr
  105     | args ',' expr


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 89
    '%' (37)
    '&' (38) 94
    '(' (40) 18 20 51 56 59 60 61 64 81 82 100 101 102 103
    ')' (41) 18 20 51 56 59 60 61 64 81 82 100 101 102 103
    '*' (42) 21 95
    '+' (43) 78
    ',' (44) 26 105
    '-' (45) 79 88
    '.' (46) 97
    '/' (47)
    ';' (59) 5 6 7 8 31 32 33 34 40 42 44 45 56 57 58 59 60 61
    '=' (61) 68
    '[' (91) 6 28 32 96
    ']' (93) 6 28 32 96
    '{' (123) 16 36
    '}' (125) 16 36
    error (256)
    IFX (258)
    ELSE <idptr> (259) 48
    LOGICAL_OR <idptr> (260) 71
    LOGICAL_AND <idptr> (261) 74
    EQUOP <idptr> (262) 77
    RELOP <idptr> (263) 76
    INCOP <idptr> (264) 90 92
    DECOP <idptr> (265) 91 93
    STRUCTOP <idptr> (266) 98
    WRITE_INT (267) 59
    WRITE_CHAR (268) 60
    WRITE_STRING (269) 61
    READ_INT (270) 102
    READ_CHAR (271) 103
    ID <idptr> (272) 5 6 16 17 18 20 27 28 31 32 86 97 98
    TYPE <idptr> (273) 11
    VOID <idptr> (274) 12 24
    NULL_ <idptr> (275) 87
    STRUCT <idptr> (276) 16 17
    RETURN <idptr> (277) 42 44
    IF <idptr> (278) 64
    WHILE <idptr> (279) 51
    FOR <idptr> (280) 56
    BREAK <idptr> (281) 57
    CONTINUE <idptr> (282) 58
    STRING <stringVal> (283) 85
    INTEGER_CONST <intVal> (284) 6 28 32 83
    CHAR_CONST <charVal> (285) 84


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    program (49)
        on left: 2
        on right: 0
    $@1 (50)
        on left: 1
        on right: 2
    ext_def_list <intVal> (51)
        on left: 3 4
        on right: 2 3
    ext_def <intVal> (52)
        on left: 5 6 7 8 10
        on right: 3
    $@2 (53)
        on left: 9
        on right: 10
    type_specifier <declptr> (54)
        on left: 11 12 13
        on right: 5 6 8 18 20 27 28 31 32 33
    struct_specifier <declptr> (55)
        on left: 16 17
        on right: 13
    @3 (56)
        on left: 14
        on right: 16
    @4 (57)
        on left: 15
        on right: 16
    func_decl <declptr> (58)
        on left: 18 20
        on right: 7 10 34
    @5 (59)
        on left: 19
        on right: 20
    pointers <boolVal> (60)
        on left: 21 22
        on right: 5 6 18 20 27 28 31 32
    real_param_list (61)
        on left: 23 24
        on right: 20
    param_list (62)
        on left: 25 26
        on right: 23 26
    param_decl (63)
        on left: 27 28
        on right: 25 26
    def_list <intVal> (64)
        on left: 29 30
        on right: 16 29 37
    def <intVal> (65)
        on left: 31 32 33 34
        on right: 29
    compound_stmt (66)
        on left: 36
        on right: 10 41
    $@6 (67)
        on left: 35
        on right: 36
    local_defs <intVal> (68)
        on left: 37
        on right: 36
    stmt_list (69)
        on left: 38 39
        on right: 36 38
    stmt (70)
        on left: 40 41 42 44 45 46 48 51 56 57 58 59 60 61
        on right: 38 48 51 56 64
    $@7 (71)
        on left: 43
        on right: 44
    $@8 (72)
        on left: 47
        on right: 48
    @9 (73)
        on left: 49
        on right: 51
    $@10 (74)
        on left: 50
        on right: 51
    $@11 (75)
        on left: 52
        on right: 56
    @12 (76)
        on left: 53
        on right: 56
    $@13 (77)
        on left: 54
        on right: 56
    $@14 (78)
        on left: 55
        on right: 56
    if_stmt <intVal> (79)
        on left: 64
        on right: 46 48
    @15 (80)
        on left: 62
        on right: 64
    $@16 (81)
        on left: 63
        on right: 64
    expr_e (82)
        on left: 65 66
        on right: 56
    expr <declptr> (83)
        on left: 68 69
        on right: 40 44 51 64 65 68 81 96 104 105
    $@17 (84)
        on left: 67
        on right: 68
    or_expr <declptr> (85)
        on left: 70
        on right: 69
    or_list <declptr> (86)
        on left: 71 72
        on right: 70 71
    and_expr <declptr> (87)
        on left: 73
        on right: 71 72
    and_list <declptr> (88)
        on left: 74 75
        on right: 73 74
    binary <declptr> (89)
        on left: 76 77 78 79 80
        on right: 74 75 76 77 78 79
    unary <declptr> (90)
        on left: 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 100 101 102 103
        on right: 59 60 61 68 80 82 88 89 90 91 92 93 94 95 96 97 98 100 101
    @18 (91)
        on left: 99
        on right: 100
    args <declptr> (92)
        on left: 104 105
        on right: 100 105


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 . ext_def_list

    $default  reduce using rule 4 (ext_def_list)

    ext_def_list  go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

    2 program: $@1 ext_def_list .
    3 ext_def_list: ext_def_list . ext_def

    TYPE    shift, and go to state 5
    VOID    shift, and go to state 6
    STRUCT  shift, and go to state 7

    $default  reduce using rule 2 (program)

    ext_def           go to state 8
    type_specifier    go to state 9
    struct_specifier  go to state 10
    func_decl         go to state 11


State 5

   11 type_specifier: TYPE .

    $default  reduce using rule 11 (type_specifier)


State 6

   12 type_specifier: VOID .

    $default  reduce using rule 12 (type_specifier)


State 7

   16 struct_specifier: STRUCT . ID '{' @3 def_list @4 '}'
   17                 | STRUCT . ID

    ID  shift, and go to state 12


State 8

    3 ext_def_list: ext_def_list ext_def .

    $default  reduce using rule 3 (ext_def_list)


State 9

    5 ext_def: type_specifier . pointers ID ';'
    6        | type_specifier . pointers ID '[' INTEGER_CONST ']' ';'
    8        | type_specifier . ';'
   18 func_decl: type_specifier . pointers ID '(' ')'
   20          | type_specifier . pointers ID '(' @5 real_param_list ')'

    '*'  shift, and go to state 13
    ';'  shift, and go to state 14

    $default  reduce using rule 22 (pointers)

    pointers  go to state 15


State 10

   13 type_specifier: struct_specifier .

    $default  reduce using rule 13 (type_specifier)


State 11

    7 ext_def: func_decl . ';'
   10        | func_decl . $@2 compound_stmt

    ';'  shift, and go to state 16

    $default  reduce using rule 9 ($@2)

    $@2  go to state 17


State 12

   16 struct_specifier: STRUCT ID . '{' @3 def_list @4 '}'
   17                 | STRUCT ID .

    '{'  shift, and go to state 18

    $default  reduce using rule 17 (struct_specifier)


State 13

   21 pointers: '*' .

    $default  reduce using rule 21 (pointers)


State 14

    8 ext_def: type_specifier ';' .

    $default  reduce using rule 8 (ext_def)


State 15

    5 ext_def: type_specifier pointers . ID ';'
    6        | type_specifier pointers . ID '[' INTEGER_CONST ']' ';'
   18 func_decl: type_specifier pointers . ID '(' ')'
   20          | type_specifier pointers . ID '(' @5 real_param_list ')'

    ID  shift, and go to state 19


State 16

    7 ext_def: func_decl ';' .

    $default  reduce using rule 7 (ext_def)


State 17

   10 ext_def: func_decl $@2 . compound_stmt

    '{'  shift, and go to state 20

    compound_stmt  go to state 21


State 18

   16 struct_specifier: STRUCT ID '{' . @3 def_list @4 '}'

    $default  reduce using rule 14 (@3)

    @3  go to state 22


State 19

    5 ext_def: type_specifier pointers ID . ';'
    6        | type_specifier pointers ID . '[' INTEGER_CONST ']' ';'
   18 func_decl: type_specifier pointers ID . '(' ')'
   20          | type_specifier pointers ID . '(' @5 real_param_list ')'

    '['  shift, and go to state 23
    '('  shift, and go to state 24
    ';'  shift, and go to state 25


State 20

   36 compound_stmt: '{' . local_defs $@6 stmt_list '}'

    $default  reduce using rule 30 (def_list)

    def_list    go to state 26
    local_defs  go to state 27


State 21

   10 ext_def: func_decl $@2 compound_stmt .

    $default  reduce using rule 10 (ext_def)


State 22

   16 struct_specifier: STRUCT ID '{' @3 . def_list @4 '}'

    $default  reduce using rule 30 (def_list)

    def_list  go to state 28


State 23

    6 ext_def: type_specifier pointers ID '[' . INTEGER_CONST ']' ';'

    INTEGER_CONST  shift, and go to state 29


State 24

   18 func_decl: type_specifier pointers ID '(' . ')'
   20          | type_specifier pointers ID '(' . @5 real_param_list ')'

    ')'  shift, and go to state 30

    $default  reduce using rule 19 (@5)

    @5  go to state 31


State 25

    5 ext_def: type_specifier pointers ID ';' .

    $default  reduce using rule 5 (ext_def)


State 26

   29 def_list: def_list . def
   37 local_defs: def_list .

    TYPE    shift, and go to state 5
    VOID    shift, and go to state 6
    STRUCT  shift, and go to state 7

    $default  reduce using rule 37 (local_defs)

    type_specifier    go to state 32
    struct_specifier  go to state 10
    func_decl         go to state 33
    def               go to state 34


State 27

   36 compound_stmt: '{' local_defs . $@6 stmt_list '}'

    $default  reduce using rule 35 ($@6)

    $@6  go to state 35


State 28

   16 struct_specifier: STRUCT ID '{' @3 def_list . @4 '}'
   29 def_list: def_list . def

    TYPE    shift, and go to state 5
    VOID    shift, and go to state 6
    STRUCT  shift, and go to state 7

    $default  reduce using rule 15 (@4)

    type_specifier    go to state 32
    struct_specifier  go to state 10
    @4                go to state 36
    func_decl         go to state 33
    def               go to state 34


State 29

    6 ext_def: type_specifier pointers ID '[' INTEGER_CONST . ']' ';'

    ']'  shift, and go to state 37


State 30

   18 func_decl: type_specifier pointers ID '(' ')' .

    $default  reduce using rule 18 (func_decl)


State 31

   20 func_decl: type_specifier pointers ID '(' @5 . real_param_list ')'

    TYPE    shift, and go to state 5
    VOID    shift, and go to state 38
    STRUCT  shift, and go to state 7

    type_specifier    go to state 39
    struct_specifier  go to state 10
    real_param_list   go to state 40
    param_list        go to state 41
    param_decl        go to state 42


State 32

   18 func_decl: type_specifier . pointers ID '(' ')'
   20          | type_specifier . pointers ID '(' @5 real_param_list ')'
   31 def: type_specifier . pointers ID ';'
   32    | type_specifier . pointers ID '[' INTEGER_CONST ']' ';'
   33    | type_specifier . ';'

    '*'  shift, and go to state 13
    ';'  shift, and go to state 43

    $default  reduce using rule 22 (pointers)

    pointers  go to state 44


State 33

   34 def: func_decl . ';'

    ';'  shift, and go to state 45


State 34

   29 def_list: def_list def .

    $default  reduce using rule 29 (def_list)


State 35

   36 compound_stmt: '{' local_defs $@6 . stmt_list '}'

    $default  reduce using rule 39 (stmt_list)

    stmt_list  go to state 46


State 36

   16 struct_specifier: STRUCT ID '{' @3 def_list @4 . '}'

    '}'  shift, and go to state 47


State 37

    6 ext_def: type_specifier pointers ID '[' INTEGER_CONST ']' . ';'

    ';'  shift, and go to state 48


State 38

   12 type_specifier: VOID .
   24 real_param_list: VOID .

    ')'       reduce using rule 24 (real_param_list)
    $default  reduce using rule 12 (type_specifier)


State 39

   27 param_decl: type_specifier . pointers ID
   28           | type_specifier . pointers ID '[' INTEGER_CONST ']'

    '*'  shift, and go to state 13

    $default  reduce using rule 22 (pointers)

    pointers  go to state 49


State 40

   20 func_decl: type_specifier pointers ID '(' @5 real_param_list . ')'

    ')'  shift, and go to state 50


State 41

   23 real_param_list: param_list .
   26 param_list: param_list . ',' param_decl

    ','  shift, and go to state 51

    $default  reduce using rule 23 (real_param_list)


State 42

   25 param_list: param_decl .

    $default  reduce using rule 25 (param_list)


State 43

   33 def: type_specifier ';' .

    $default  reduce using rule 33 (def)


State 44

   18 func_decl: type_specifier pointers . ID '(' ')'
   20          | type_specifier pointers . ID '(' @5 real_param_list ')'
   31 def: type_specifier pointers . ID ';'
   32    | type_specifier pointers . ID '[' INTEGER_CONST ']' ';'

    ID  shift, and go to state 52


State 45

   34 def: func_decl ';' .

    $default  reduce using rule 34 (def)


State 46

   36 compound_stmt: '{' local_defs $@6 stmt_list . '}'
   38 stmt_list: stmt_list . stmt

    '&'            shift, and go to state 53
    '-'            shift, and go to state 54
    '*'            shift, and go to state 55
    '!'            shift, and go to state 56
    INCOP          shift, and go to state 57
    DECOP          shift, and go to state 58
    '('            shift, and go to state 59
    WRITE_INT      shift, and go to state 60
    WRITE_CHAR     shift, and go to state 61
    WRITE_STRING   shift, and go to state 62
    READ_INT       shift, and go to state 63
    READ_CHAR      shift, and go to state 64
    ID             shift, and go to state 65
    NULL_          shift, and go to state 66
    RETURN         shift, and go to state 67
    IF             shift, and go to state 68
    WHILE          shift, and go to state 69
    FOR            shift, and go to state 70
    BREAK          shift, and go to state 71
    CONTINUE       shift, and go to state 72
    STRING         shift, and go to state 73
    INTEGER_CONST  shift, and go to state 74
    CHAR_CONST     shift, and go to state 75
    ';'            shift, and go to state 76
    '{'            shift, and go to state 20
    '}'            shift, and go to state 77

    compound_stmt  go to state 78
    stmt           go to state 79
    if_stmt        go to state 80
    expr           go to state 81
    or_expr        go to state 82
    or_list        go to state 83
    and_expr       go to state 84
    and_list       go to state 85
    binary         go to state 86
    unary          go to state 87


State 47

   16 struct_specifier: STRUCT ID '{' @3 def_list @4 '}' .

    $default  reduce using rule 16 (struct_specifier)


State 48

    6 ext_def: type_specifier pointers ID '[' INTEGER_CONST ']' ';' .

    $default  reduce using rule 6 (ext_def)


State 49

   27 param_decl: type_specifier pointers . ID
   28           | type_specifier pointers . ID '[' INTEGER_CONST ']'

    ID  shift, and go to state 88


State 50

   20 func_decl: type_specifier pointers ID '(' @5 real_param_list ')' .

    $default  reduce using rule 20 (func_decl)


State 51

   26 param_list: param_list ',' . param_decl

    TYPE    shift, and go to state 5
    VOID    shift, and go to state 6
    STRUCT  shift, and go to state 7

    type_specifier    go to state 39
    struct_specifier  go to state 10
    param_decl        go to state 89


State 52

   18 func_decl: type_specifier pointers ID . '(' ')'
   20          | type_specifier pointers ID . '(' @5 real_param_list ')'
   31 def: type_specifier pointers ID . ';'
   32    | type_specifier pointers ID . '[' INTEGER_CONST ']' ';'

    '['  shift, and go to state 90
    '('  shift, and go to state 24
    ';'  shift, and go to state 91


State 53

   94 unary: '&' . unary

    '&'            shift, and go to state 53
    '-'            shift, and go to state 54
    '*'            shift, and go to state 55
    '!'            shift, and go to state 56
    INCOP          shift, and go to state 57
    DECOP          shift, and go to state 58
    '('            shift, and go to state 59
    READ_INT       shift, and go to state 63
    READ_CHAR      shift, and go to state 64
    ID             shift, and go to state 65
    NULL_          shift, and go to state 66
    STRING         shift, and go to state 73
    INTEGER_CONST  shift, and go to state 74
    CHAR_CONST     shift, and go to state 75

    unary  go to state 92


State 54

   88 unary: '-' . unary

    '&'            shift, and go to state 53
    '-'            shift, and go to state 54
    '*'            shift, and go to state 55
    '!'            shift, and go to state 56
    INCOP          shift, and go to state 57
    DECOP          shift, and go to state 58
    '('            shift, and go to state 59
    READ_INT       shift, and go to state 63
    READ_CHAR      shift, and go to state 64
    ID             shift, and go to state 65
    NULL_          shift, and go to state 66
    STRING         shift, and go to state 73
    INTEGER_CONST  shift, and go to state 74
    CHAR_CONST     shift, and go to state 75

    unary  go to state 93


State 55

   95 unary: '*' . unary

    '&'            shift, and go to state 53
    '-'            shift, and go to state 54
    '*'            shift, and go to state 55
    '!'            shift, and go to state 56
    INCOP          shift, and go to state 57
    DECOP          shift, and go to state 58
    '('            shift, and go to state 59
    READ_INT       shift, and go to state 63
    READ_CHAR      shift, and go to state 64
    ID             shift, and go to state 65
    NULL_          shift, and go to state 66
    STRING         shift, and go to state 73
    INTEGER_CONST  shift, and go to state 74
    CHAR_CONST     shift, and go to state 75

    unary  go to state 94


State 56

   89 unary: '!' . unary

    '&'            shift, and go to state 53
    '-'            shift, and go to state 54
    '*'            shift, and go to state 55
    '!'            shift, and go to state 56
    INCOP          shift, and go to state 57
    DECOP          shift, and go to state 58
    '('            shift, and go to state 59
    READ_INT       shift, and go to state 63
    READ_CHAR      shift, and go to state 64
    ID             shift, and go to state 65
    NULL_          shift, and go to state 66
    STRING         shift, and go to state 73
    INTEGER_CONST  shift, and go to state 74
    CHAR_CONST     shift, and go to state 75

    unary  go to state 95


State 57

   92 unary: INCOP . unary

    '&'            shift, and go to state 53
    '-'            shift, and go to state 54
    '*'            shift, and go to state 55
    '!'            shift, and go to state 56
    INCOP          shift, and go to state 57
    DECOP          shift, and go to state 58
    '('            shift, and go to state 59
    READ_INT       shift, and go to state 63
    READ_CHAR      shift, and go to state 64
    ID             shift, and go to state 65
    NULL_          shift, and go to state 66
    STRING         shift, and go to state 73
    INTEGER_CONST  shift, and go to state 74
    CHAR_CONST     shift, and go to state 75

    unary  go to state 96


State 58

   93 unary: DECOP . unary

    '&'            shift, and go to state 53
    '-'            shift, and go to state 54
    '*'            shift, and go to state 55
    '!'            shift, and go to state 56
    INCOP          shift, and go to state 57
    DECOP          shift, and go to state 58
    '('            shift, and go to state 59
    READ_INT       shift, and go to state 63
    READ_CHAR      shift, and go to state 64
    ID             shift, and go to state 65
    NULL_          shift, and go to state 66
    STRING         shift, and go to state 73
    INTEGER_CONST  shift, and go to state 74
    CHAR_CONST     shift, and go to state 75

    unary  go to state 97


State 59

   81 unary: '(' . expr ')'
   82      | '(' . unary ')'

    '&'            shift, and go to state 53
    '-'            shift, and go to state 54
    '*'            shift, and go to state 55
    '!'            shift, and go to state 56
    INCOP          shift, and go to state 57
    DECOP          shift, and go to state 58
    '('            shift, and go to state 59
    READ_INT       shift, and go to state 63
    READ_CHAR      shift, and go to state 64
    ID             shift, and go to state 65
    NULL_          shift, and go to state 66
    STRING         shift, and go to state 73
    INTEGER_CONST  shift, and go to state 74
    CHAR_CONST     shift, and go to state 75

    expr      go to state 98
    or_expr   go to state 82
    or_list   go to state 83
    and_expr  go to state 84
    and_list  go to state 85
    binary    go to state 86
    unary     go to state 99


State 60

   59 stmt: WRITE_INT . '(' unary ')' ';'

    '('  shift, and go to state 100


State 61

   60 stmt: WRITE_CHAR . '(' unary ')' ';'

    '('  shift, and go to state 101


State 62

   61 stmt: WRITE_STRING . '(' unary ')' ';'

    '('  shift, and go to state 102


State 63

  102 unary: READ_INT . '(' ')'

    '('  shift, and go to state 103


State 64

  103 unary: READ_CHAR . '(' ')'

    '('  shift, and go to state 104


State 65

   86 unary: ID .

    $default  reduce using rule 86 (unary)


State 66

   87 unary: NULL_ .

    $default  reduce using rule 87 (unary)


State 67

   42 stmt: RETURN . ';'
   44     | RETURN . $@7 expr ';'

    ';'  shift, and go to state 105

    $default  reduce using rule 43 ($@7)

    $@7  go to state 106


State 68

   64 if_stmt: IF . @15 '(' expr ')' $@16 stmt

    $default  reduce using rule 62 (@15)

    @15  go to state 107


State 69

   51 stmt: WHILE . @9 '(' expr ')' $@10 stmt

    $default  reduce using rule 49 (@9)

    @9  go to state 108


State 70

   56 stmt: FOR . $@11 '(' expr_e ';' @12 expr_e ';' $@13 expr_e ')' $@14 stmt

    $default  reduce using rule 52 ($@11)

    $@11  go to state 109


State 71

   57 stmt: BREAK . ';'

    ';'  shift, and go to state 110


State 72

   58 stmt: CONTINUE . ';'

    ';'  shift, and go to state 111


State 73

   85 unary: STRING .

    $default  reduce using rule 85 (unary)


State 74

   83 unary: INTEGER_CONST .

    $default  reduce using rule 83 (unary)


State 75

   84 unary: CHAR_CONST .

    $default  reduce using rule 84 (unary)


State 76

   45 stmt: ';' .

    $default  reduce using rule 45 (stmt)


State 77

   36 compound_stmt: '{' local_defs $@6 stmt_list '}' .

    $default  reduce using rule 36 (compound_stmt)


State 78

   41 stmt: compound_stmt .

    $default  reduce using rule 41 (stmt)


State 79

   38 stmt_list: stmt_list stmt .

    $default  reduce using rule 38 (stmt_list)


State 80

   46 stmt: if_stmt .
   48     | if_stmt . ELSE $@8 stmt

    ELSE  shift, and go to state 112

    $default  reduce using rule 46 (stmt)


State 81

   40 stmt: expr . ';'

    ';'  shift, and go to state 113


State 82

   69 expr: or_expr .

    $default  reduce using rule 69 (expr)


State 83

   70 or_expr: or_list .
   71 or_list: or_list . LOGICAL_OR and_expr

    LOGICAL_OR  shift, and go to state 114

    $default  reduce using rule 70 (or_expr)


State 84

   72 or_list: and_expr .

    $default  reduce using rule 72 (or_list)


State 85

   73 and_expr: and_list .
   74 and_list: and_list . LOGICAL_AND binary

    LOGICAL_AND  shift, and go to state 115

    $default  reduce using rule 73 (and_expr)


State 86

   75 and_list: binary .
   76 binary: binary . RELOP binary
   77       | binary . EQUOP binary
   78       | binary . '+' binary
   79       | binary . '-' binary

    EQUOP  shift, and go to state 116
    RELOP  shift, and go to state 117
    '+'    shift, and go to state 118
    '-'    shift, and go to state 119

    $default  reduce using rule 75 (and_list)


State 87

   68 expr: unary . $@17 '=' expr
   80 binary: unary .
   90 unary: unary . INCOP
   91      | unary . DECOP
   96      | unary . '[' expr ']'
   97      | unary . '.' ID
   98      | unary . STRUCTOP ID
  100      | unary . '(' @18 args ')'
  101      | unary . '(' ')'

    INCOP     shift, and go to state 120
    DECOP     shift, and go to state 121
    '['       shift, and go to state 122
    '('       shift, and go to state 123
    '.'       shift, and go to state 124
    STRUCTOP  shift, and go to state 125

    '='       reduce using rule 67 ($@17)
    $default  reduce using rule 80 (binary)

    $@17  go to state 126


State 88

   27 param_decl: type_specifier pointers ID .
   28           | type_specifier pointers ID . '[' INTEGER_CONST ']'

    '['  shift, and go to state 127

    $default  reduce using rule 27 (param_decl)


State 89

   26 param_list: param_list ',' param_decl .

    $default  reduce using rule 26 (param_list)


State 90

   32 def: type_specifier pointers ID '[' . INTEGER_CONST ']' ';'

    INTEGER_CONST  shift, and go to state 128


State 91

   31 def: type_specifier pointers ID ';' .

    $default  reduce using rule 31 (def)


State 92

   90 unary: unary . INCOP
   91      | unary . DECOP
   94      | '&' unary .
   96      | unary . '[' expr ']'
   97      | unary . '.' ID
   98      | unary . STRUCTOP ID
  100      | unary . '(' @18 args ')'
  101      | unary . '(' ')'

    INCOP     shift, and go to state 120
    DECOP     shift, and go to state 121
    '['       shift, and go to state 122
    '('       shift, and go to state 123
    '.'       shift, and go to state 124
    STRUCTOP  shift, and go to state 125

    $default  reduce using rule 94 (unary)


State 93

   88 unary: '-' unary .
   90      | unary . INCOP
   91      | unary . DECOP
   96      | unary . '[' expr ']'
   97      | unary . '.' ID
   98      | unary . STRUCTOP ID
  100      | unary . '(' @18 args ')'
  101      | unary . '(' ')'

    INCOP     shift, and go to state 120
    DECOP     shift, and go to state 121
    '['       shift, and go to state 122
    '('       shift, and go to state 123
    '.'       shift, and go to state 124
    STRUCTOP  shift, and go to state 125

    $default  reduce using rule 88 (unary)


State 94

   90 unary: unary . INCOP
   91      | unary . DECOP
   95      | '*' unary .
   96      | unary . '[' expr ']'
   97      | unary . '.' ID
   98      | unary . STRUCTOP ID
  100      | unary . '(' @18 args ')'
  101      | unary . '(' ')'

    INCOP     shift, and go to state 120
    DECOP     shift, and go to state 121
    '['       shift, and go to state 122
    '('       shift, and go to state 123
    '.'       shift, and go to state 124
    STRUCTOP  shift, and go to state 125

    $default  reduce using rule 95 (unary)


State 95

   89 unary: '!' unary .
   90      | unary . INCOP
   91      | unary . DECOP
   96      | unary . '[' expr ']'
   97      | unary . '.' ID
   98      | unary . STRUCTOP ID
  100      | unary . '(' @18 args ')'
  101      | unary . '(' ')'

    INCOP     shift, and go to state 120
    DECOP     shift, and go to state 121
    '['       shift, and go to state 122
    '('       shift, and go to state 123
    '.'       shift, and go to state 124
    STRUCTOP  shift, and go to state 125

    $default  reduce using rule 89 (unary)


State 96

   90 unary: unary . INCOP
   91      | unary . DECOP
   92      | INCOP unary .
   96      | unary . '[' expr ']'
   97      | unary . '.' ID
   98      | unary . STRUCTOP ID
  100      | unary . '(' @18 args ')'
  101      | unary . '(' ')'

    INCOP     shift, and go to state 120
    DECOP     shift, and go to state 121
    '['       shift, and go to state 122
    '('       shift, and go to state 123
    '.'       shift, and go to state 124
    STRUCTOP  shift, and go to state 125

    $default  reduce using rule 92 (unary)


State 97

   90 unary: unary . INCOP
   91      | unary . DECOP
   93      | DECOP unary .
   96      | unary . '[' expr ']'
   97      | unary . '.' ID
   98      | unary . STRUCTOP ID
  100      | unary . '(' @18 args ')'
  101      | unary . '(' ')'

    INCOP     shift, and go to state 120
    DECOP     shift, and go to state 121
    '['       shift, and go to state 122
    '('       shift, and go to state 123
    '.'       shift, and go to state 124
    STRUCTOP  shift, and go to state 125

    $default  reduce using rule 93 (unary)


State 98

   81 unary: '(' expr . ')'

    ')'  shift, and go to state 129


State 99

   68 expr: unary . $@17 '=' expr
   80 binary: unary .
   82 unary: '(' unary . ')'
   90      | unary . INCOP
   91      | unary . DECOP
   96      | unary . '[' expr ']'
   97      | unary . '.' ID
   98      | unary . STRUCTOP ID
  100      | unary . '(' @18 args ')'
  101      | unary . '(' ')'

    INCOP     shift, and go to state 120
    DECOP     shift, and go to state 121
    '['       shift, and go to state 122
    '('       shift, and go to state 123
    ')'       shift, and go to state 130
    '.'       shift, and go to state 124
    STRUCTOP  shift, and go to state 125

    '='       reduce using rule 67 ($@17)
    $default  reduce using rule 80 (binary)

    $@17  go to state 126


State 100

   59 stmt: WRITE_INT '(' . unary ')' ';'

    '&'            shift, and go to state 53
    '-'            shift, and go to state 54
    '*'            shift, and go to state 55
    '!'            shift, and go to state 56
    INCOP          shift, and go to state 57
    DECOP          shift, and go to state 58
    '('            shift, and go to state 59
    READ_INT       shift, and go to state 63
    READ_CHAR      shift, and go to state 64
    ID             shift, and go to state 65
    NULL_          shift, and go to state 66
    STRING         shift, and go to state 73
    INTEGER_CONST  shift, and go to state 74
    CHAR_CONST     shift, and go to state 75

    unary  go to state 131


State 101

   60 stmt: WRITE_CHAR '(' . unary ')' ';'

    '&'            shift, and go to state 53
    '-'            shift, and go to state 54
    '*'            shift, and go to state 55
    '!'            shift, and go to state 56
    INCOP          shift, and go to state 57
    DECOP          shift, and go to state 58
    '('            shift, and go to state 59
    READ_INT       shift, and go to state 63
    READ_CHAR      shift, and go to state 64
    ID             shift, and go to state 65
    NULL_          shift, and go to state 66
    STRING         shift, and go to state 73
    INTEGER_CONST  shift, and go to state 74
    CHAR_CONST     shift, and go to state 75

    unary  go to state 132


State 102

   61 stmt: WRITE_STRING '(' . unary ')' ';'

    '&'            shift, and go to state 53
    '-'            shift, and go to state 54
    '*'            shift, and go to state 55
    '!'            shift, and go to state 56
    INCOP          shift, and go to state 57
    DECOP          shift, and go to state 58
    '('            shift, and go to state 59
    READ_INT       shift, and go to state 63
    READ_CHAR      shift, and go to state 64
    ID             shift, and go to state 65
    NULL_          shift, and go to state 66
    STRING         shift, and go to state 73
    INTEGER_CONST  shift, and go to state 74
    CHAR_CONST     shift, and go to state 75

    unary  go to state 133


State 103

  102 unary: READ_INT '(' . ')'

    ')'  shift, and go to state 134


State 104

  103 unary: READ_CHAR '(' . ')'

    ')'  shift, and go to state 135


State 105

   42 stmt: RETURN ';' .

    $default  reduce using rule 42 (stmt)


State 106

   44 stmt: RETURN $@7 . expr ';'

    '&'            shift, and go to state 53
    '-'            shift, and go to state 54
    '*'            shift, and go to state 55
    '!'            shift, and go to state 56
    INCOP          shift, and go to state 57
    DECOP          shift, and go to state 58
    '('            shift, and go to state 59
    READ_INT       shift, and go to state 63
    READ_CHAR      shift, and go to state 64
    ID             shift, and go to state 65
    NULL_          shift, and go to state 66
    STRING         shift, and go to state 73
    INTEGER_CONST  shift, and go to state 74
    CHAR_CONST     shift, and go to state 75

    expr      go to state 136
    or_expr   go to state 82
    or_list   go to state 83
    and_expr  go to state 84
    and_list  go to state 85
    binary    go to state 86
    unary     go to state 87


State 107

   64 if_stmt: IF @15 . '(' expr ')' $@16 stmt

    '('  shift, and go to state 137


State 108

   51 stmt: WHILE @9 . '(' expr ')' $@10 stmt

    '('  shift, and go to state 138


State 109

   56 stmt: FOR $@11 . '(' expr_e ';' @12 expr_e ';' $@13 expr_e ')' $@14 stmt

    '('  shift, and go to state 139


State 110

   57 stmt: BREAK ';' .

    $default  reduce using rule 57 (stmt)


State 111

   58 stmt: CONTINUE ';' .

    $default  reduce using rule 58 (stmt)


State 112

   48 stmt: if_stmt ELSE . $@8 stmt

    $default  reduce using rule 47 ($@8)

    $@8  go to state 140


State 113

   40 stmt: expr ';' .

    $default  reduce using rule 40 (stmt)


State 114

   71 or_list: or_list LOGICAL_OR . and_expr

    '&'            shift, and go to state 53
    '-'            shift, and go to state 54
    '*'            shift, and go to state 55
    '!'            shift, and go to state 56
    INCOP          shift, and go to state 57
    DECOP          shift, and go to state 58
    '('            shift, and go to state 59
    READ_INT       shift, and go to state 63
    READ_CHAR      shift, and go to state 64
    ID             shift, and go to state 65
    NULL_          shift, and go to state 66
    STRING         shift, and go to state 73
    INTEGER_CONST  shift, and go to state 74
    CHAR_CONST     shift, and go to state 75

    and_expr  go to state 141
    and_list  go to state 85
    binary    go to state 86
    unary     go to state 142


State 115

   74 and_list: and_list LOGICAL_AND . binary

    '&'            shift, and go to state 53
    '-'            shift, and go to state 54
    '*'            shift, and go to state 55
    '!'            shift, and go to state 56
    INCOP          shift, and go to state 57
    DECOP          shift, and go to state 58
    '('            shift, and go to state 59
    READ_INT       shift, and go to state 63
    READ_CHAR      shift, and go to state 64
    ID             shift, and go to state 65
    NULL_          shift, and go to state 66
    STRING         shift, and go to state 73
    INTEGER_CONST  shift, and go to state 74
    CHAR_CONST     shift, and go to state 75

    binary  go to state 143
    unary   go to state 142


State 116

   77 binary: binary EQUOP . binary

    '&'            shift, and go to state 53
    '-'            shift, and go to state 54
    '*'            shift, and go to state 55
    '!'            shift, and go to state 56
    INCOP          shift, and go to state 57
    DECOP          shift, and go to state 58
    '('            shift, and go to state 59
    READ_INT       shift, and go to state 63
    READ_CHAR      shift, and go to state 64
    ID             shift, and go to state 65
    NULL_          shift, and go to state 66
    STRING         shift, and go to state 73
    INTEGER_CONST  shift, and go to state 74
    CHAR_CONST     shift, and go to state 75

    binary  go to state 144
    unary   go to state 142


State 117

   76 binary: binary RELOP . binary

    '&'            shift, and go to state 53
    '-'            shift, and go to state 54
    '*'            shift, and go to state 55
    '!'            shift, and go to state 56
    INCOP          shift, and go to state 57
    DECOP          shift, and go to state 58
    '('            shift, and go to state 59
    READ_INT       shift, and go to state 63
    READ_CHAR      shift, and go to state 64
    ID             shift, and go to state 65
    NULL_          shift, and go to state 66
    STRING         shift, and go to state 73
    INTEGER_CONST  shift, and go to state 74
    CHAR_CONST     shift, and go to state 75

    binary  go to state 145
    unary   go to state 142


State 118

   78 binary: binary '+' . binary

    '&'            shift, and go to state 53
    '-'            shift, and go to state 54
    '*'            shift, and go to state 55
    '!'            shift, and go to state 56
    INCOP          shift, and go to state 57
    DECOP          shift, and go to state 58
    '('            shift, and go to state 59
    READ_INT       shift, and go to state 63
    READ_CHAR      shift, and go to state 64
    ID             shift, and go to state 65
    NULL_          shift, and go to state 66
    STRING         shift, and go to state 73
    INTEGER_CONST  shift, and go to state 74
    CHAR_CONST     shift, and go to state 75

    binary  go to state 146
    unary   go to state 142


State 119

   79 binary: binary '-' . binary

    '&'            shift, and go to state 53
    '-'            shift, and go to state 54
    '*'            shift, and go to state 55
    '!'            shift, and go to state 56
    INCOP          shift, and go to state 57
    DECOP          shift, and go to state 58
    '('            shift, and go to state 59
    READ_INT       shift, and go to state 63
    READ_CHAR      shift, and go to state 64
    ID             shift, and go to state 65
    NULL_          shift, and go to state 66
    STRING         shift, and go to state 73
    INTEGER_CONST  shift, and go to state 74
    CHAR_CONST     shift, and go to state 75

    binary  go to state 147
    unary   go to state 142


State 120

   90 unary: unary INCOP .

    $default  reduce using rule 90 (unary)


State 121

   91 unary: unary DECOP .

    $default  reduce using rule 91 (unary)


State 122

   96 unary: unary '[' . expr ']'

    '&'            shift, and go to state 53
    '-'            shift, and go to state 54
    '*'            shift, and go to state 55
    '!'            shift, and go to state 56
    INCOP          shift, and go to state 57
    DECOP          shift, and go to state 58
    '('            shift, and go to state 59
    READ_INT       shift, and go to state 63
    READ_CHAR      shift, and go to state 64
    ID             shift, and go to state 65
    NULL_          shift, and go to state 66
    STRING         shift, and go to state 73
    INTEGER_CONST  shift, and go to state 74
    CHAR_CONST     shift, and go to state 75

    expr      go to state 148
    or_expr   go to state 82
    or_list   go to state 83
    and_expr  go to state 84
    and_list  go to state 85
    binary    go to state 86
    unary     go to state 87


State 123

  100 unary: unary '(' . @18 args ')'
  101      | unary '(' . ')'

    ')'  shift, and go to state 149

    $default  reduce using rule 99 (@18)

    @18  go to state 150


State 124

   97 unary: unary '.' . ID

    ID  shift, and go to state 151


State 125

   98 unary: unary STRUCTOP . ID

    ID  shift, and go to state 152


State 126

   68 expr: unary $@17 . '=' expr

    '='  shift, and go to state 153


State 127

   28 param_decl: type_specifier pointers ID '[' . INTEGER_CONST ']'

    INTEGER_CONST  shift, and go to state 154


State 128

   32 def: type_specifier pointers ID '[' INTEGER_CONST . ']' ';'

    ']'  shift, and go to state 155


State 129

   81 unary: '(' expr ')' .

    $default  reduce using rule 81 (unary)


State 130

   82 unary: '(' unary ')' .

    $default  reduce using rule 82 (unary)


State 131

   59 stmt: WRITE_INT '(' unary . ')' ';'
   90 unary: unary . INCOP
   91      | unary . DECOP
   96      | unary . '[' expr ']'
   97      | unary . '.' ID
   98      | unary . STRUCTOP ID
  100      | unary . '(' @18 args ')'
  101      | unary . '(' ')'

    INCOP     shift, and go to state 120
    DECOP     shift, and go to state 121
    '['       shift, and go to state 122
    '('       shift, and go to state 123
    ')'       shift, and go to state 156
    '.'       shift, and go to state 124
    STRUCTOP  shift, and go to state 125


State 132

   60 stmt: WRITE_CHAR '(' unary . ')' ';'
   90 unary: unary . INCOP
   91      | unary . DECOP
   96      | unary . '[' expr ']'
   97      | unary . '.' ID
   98      | unary . STRUCTOP ID
  100      | unary . '(' @18 args ')'
  101      | unary . '(' ')'

    INCOP     shift, and go to state 120
    DECOP     shift, and go to state 121
    '['       shift, and go to state 122
    '('       shift, and go to state 123
    ')'       shift, and go to state 157
    '.'       shift, and go to state 124
    STRUCTOP  shift, and go to state 125


State 133

   61 stmt: WRITE_STRING '(' unary . ')' ';'
   90 unary: unary . INCOP
   91      | unary . DECOP
   96      | unary . '[' expr ']'
   97      | unary . '.' ID
   98      | unary . STRUCTOP ID
  100      | unary . '(' @18 args ')'
  101      | unary . '(' ')'

    INCOP     shift, and go to state 120
    DECOP     shift, and go to state 121
    '['       shift, and go to state 122
    '('       shift, and go to state 123
    ')'       shift, and go to state 158
    '.'       shift, and go to state 124
    STRUCTOP  shift, and go to state 125


State 134

  102 unary: READ_INT '(' ')' .

    $default  reduce using rule 102 (unary)


State 135

  103 unary: READ_CHAR '(' ')' .

    $default  reduce using rule 103 (unary)


State 136

   44 stmt: RETURN $@7 expr . ';'

    ';'  shift, and go to state 159


State 137

   64 if_stmt: IF @15 '(' . expr ')' $@16 stmt

    '&'            shift, and go to state 53
    '-'            shift, and go to state 54
    '*'            shift, and go to state 55
    '!'            shift, and go to state 56
    INCOP          shift, and go to state 57
    DECOP          shift, and go to state 58
    '('            shift, and go to state 59
    READ_INT       shift, and go to state 63
    READ_CHAR      shift, and go to state 64
    ID             shift, and go to state 65
    NULL_          shift, and go to state 66
    STRING         shift, and go to state 73
    INTEGER_CONST  shift, and go to state 74
    CHAR_CONST     shift, and go to state 75

    expr      go to state 160
    or_expr   go to state 82
    or_list   go to state 83
    and_expr  go to state 84
    and_list  go to state 85
    binary    go to state 86
    unary     go to state 87


State 138

   51 stmt: WHILE @9 '(' . expr ')' $@10 stmt

    '&'            shift, and go to state 53
    '-'            shift, and go to state 54
    '*'            shift, and go to state 55
    '!'            shift, and go to state 56
    INCOP          shift, and go to state 57
    DECOP          shift, and go to state 58
    '('            shift, and go to state 59
    READ_INT       shift, and go to state 63
    READ_CHAR      shift, and go to state 64
    ID             shift, and go to state 65
    NULL_          shift, and go to state 66
    STRING         shift, and go to state 73
    INTEGER_CONST  shift, and go to state 74
    CHAR_CONST     shift, and go to state 75

    expr      go to state 161
    or_expr   go to state 82
    or_list   go to state 83
    and_expr  go to state 84
    and_list  go to state 85
    binary    go to state 86
    unary     go to state 87


State 139

   56 stmt: FOR $@11 '(' . expr_e ';' @12 expr_e ';' $@13 expr_e ')' $@14 stmt

    '&'            shift, and go to state 53
    '-'            shift, and go to state 54
    '*'            shift, and go to state 55
    '!'            shift, and go to state 56
    INCOP          shift, and go to state 57
    DECOP          shift, and go to state 58
    '('            shift, and go to state 59
    READ_INT       shift, and go to state 63
    READ_CHAR      shift, and go to state 64
    ID             shift, and go to state 65
    NULL_          shift, and go to state 66
    STRING         shift, and go to state 73
    INTEGER_CONST  shift, and go to state 74
    CHAR_CONST     shift, and go to state 75

    $default  reduce using rule 66 (expr_e)

    expr_e    go to state 162
    expr      go to state 163
    or_expr   go to state 82
    or_list   go to state 83
    and_expr  go to state 84
    and_list  go to state 85
    binary    go to state 86
    unary     go to state 87


State 140

   48 stmt: if_stmt ELSE $@8 . stmt

    '&'            shift, and go to state 53
    '-'            shift, and go to state 54
    '*'            shift, and go to state 55
    '!'            shift, and go to state 56
    INCOP          shift, and go to state 57
    DECOP          shift, and go to state 58
    '('            shift, and go to state 59
    WRITE_INT      shift, and go to state 60
    WRITE_CHAR     shift, and go to state 61
    WRITE_STRING   shift, and go to state 62
    READ_INT       shift, and go to state 63
    READ_CHAR      shift, and go to state 64
    ID             shift, and go to state 65
    NULL_          shift, and go to state 66
    RETURN         shift, and go to state 67
    IF             shift, and go to state 68
    WHILE          shift, and go to state 69
    FOR            shift, and go to state 70
    BREAK          shift, and go to state 71
    CONTINUE       shift, and go to state 72
    STRING         shift, and go to state 73
    INTEGER_CONST  shift, and go to state 74
    CHAR_CONST     shift, and go to state 75
    ';'            shift, and go to state 76
    '{'            shift, and go to state 20

    compound_stmt  go to state 78
    stmt           go to state 164
    if_stmt        go to state 80
    expr           go to state 81
    or_expr        go to state 82
    or_list        go to state 83
    and_expr       go to state 84
    and_list       go to state 85
    binary         go to state 86
    unary          go to state 87


State 141

   71 or_list: or_list LOGICAL_OR and_expr .

    $default  reduce using rule 71 (or_list)


State 142

   80 binary: unary .
   90 unary: unary . INCOP
   91      | unary . DECOP
   96      | unary . '[' expr ']'
   97      | unary . '.' ID
   98      | unary . STRUCTOP ID
  100      | unary . '(' @18 args ')'
  101      | unary . '(' ')'

    INCOP     shift, and go to state 120
    DECOP     shift, and go to state 121
    '['       shift, and go to state 122
    '('       shift, and go to state 123
    '.'       shift, and go to state 124
    STRUCTOP  shift, and go to state 125

    $default  reduce using rule 80 (binary)


State 143

   74 and_list: and_list LOGICAL_AND binary .
   76 binary: binary . RELOP binary
   77       | binary . EQUOP binary
   78       | binary . '+' binary
   79       | binary . '-' binary

    EQUOP  shift, and go to state 116
    RELOP  shift, and go to state 117
    '+'    shift, and go to state 118
    '-'    shift, and go to state 119

    $default  reduce using rule 74 (and_list)


State 144

   76 binary: binary . RELOP binary
   77       | binary . EQUOP binary
   77       | binary EQUOP binary .
   78       | binary . '+' binary
   79       | binary . '-' binary

    RELOP  shift, and go to state 117
    '+'    shift, and go to state 118
    '-'    shift, and go to state 119

    $default  reduce using rule 77 (binary)


State 145

   76 binary: binary . RELOP binary
   76       | binary RELOP binary .
   77       | binary . EQUOP binary
   78       | binary . '+' binary
   79       | binary . '-' binary

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119

    $default  reduce using rule 76 (binary)


State 146

   76 binary: binary . RELOP binary
   77       | binary . EQUOP binary
   78       | binary . '+' binary
   78       | binary '+' binary .
   79       | binary . '-' binary

    $default  reduce using rule 78 (binary)


State 147

   76 binary: binary . RELOP binary
   77       | binary . EQUOP binary
   78       | binary . '+' binary
   79       | binary . '-' binary
   79       | binary '-' binary .

    $default  reduce using rule 79 (binary)


State 148

   96 unary: unary '[' expr . ']'

    ']'  shift, and go to state 165


State 149

  101 unary: unary '(' ')' .

    $default  reduce using rule 101 (unary)


State 150

  100 unary: unary '(' @18 . args ')'

    '&'            shift, and go to state 53
    '-'            shift, and go to state 54
    '*'            shift, and go to state 55
    '!'            shift, and go to state 56
    INCOP          shift, and go to state 57
    DECOP          shift, and go to state 58
    '('            shift, and go to state 59
    READ_INT       shift, and go to state 63
    READ_CHAR      shift, and go to state 64
    ID             shift, and go to state 65
    NULL_          shift, and go to state 66
    STRING         shift, and go to state 73
    INTEGER_CONST  shift, and go to state 74
    CHAR_CONST     shift, and go to state 75

    expr      go to state 166
    or_expr   go to state 82
    or_list   go to state 83
    and_expr  go to state 84
    and_list  go to state 85
    binary    go to state 86
    unary     go to state 87
    args      go to state 167


State 151

   97 unary: unary '.' ID .

    $default  reduce using rule 97 (unary)


State 152

   98 unary: unary STRUCTOP ID .

    $default  reduce using rule 98 (unary)


State 153

   68 expr: unary $@17 '=' . expr

    '&'            shift, and go to state 53
    '-'            shift, and go to state 54
    '*'            shift, and go to state 55
    '!'            shift, and go to state 56
    INCOP          shift, and go to state 57
    DECOP          shift, and go to state 58
    '('            shift, and go to state 59
    READ_INT       shift, and go to state 63
    READ_CHAR      shift, and go to state 64
    ID             shift, and go to state 65
    NULL_          shift, and go to state 66
    STRING         shift, and go to state 73
    INTEGER_CONST  shift, and go to state 74
    CHAR_CONST     shift, and go to state 75

    expr      go to state 168
    or_expr   go to state 82
    or_list   go to state 83
    and_expr  go to state 84
    and_list  go to state 85
    binary    go to state 86
    unary     go to state 87


State 154

   28 param_decl: type_specifier pointers ID '[' INTEGER_CONST . ']'

    ']'  shift, and go to state 169


State 155

   32 def: type_specifier pointers ID '[' INTEGER_CONST ']' . ';'

    ';'  shift, and go to state 170


State 156

   59 stmt: WRITE_INT '(' unary ')' . ';'

    ';'  shift, and go to state 171


State 157

   60 stmt: WRITE_CHAR '(' unary ')' . ';'

    ';'  shift, and go to state 172


State 158

   61 stmt: WRITE_STRING '(' unary ')' . ';'

    ';'  shift, and go to state 173


State 159

   44 stmt: RETURN $@7 expr ';' .

    $default  reduce using rule 44 (stmt)


State 160

   64 if_stmt: IF @15 '(' expr . ')' $@16 stmt

    ')'  shift, and go to state 174


State 161

   51 stmt: WHILE @9 '(' expr . ')' $@10 stmt

    ')'  shift, and go to state 175


State 162

   56 stmt: FOR $@11 '(' expr_e . ';' @12 expr_e ';' $@13 expr_e ')' $@14 stmt

    ';'  shift, and go to state 176


State 163

   65 expr_e: expr .

    $default  reduce using rule 65 (expr_e)


State 164

   48 stmt: if_stmt ELSE $@8 stmt .

    $default  reduce using rule 48 (stmt)


State 165

   96 unary: unary '[' expr ']' .

    $default  reduce using rule 96 (unary)


State 166

  104 args: expr .

    $default  reduce using rule 104 (args)


State 167

  100 unary: unary '(' @18 args . ')'
  105 args: args . ',' expr

    ','  shift, and go to state 177
    ')'  shift, and go to state 178


State 168

   68 expr: unary $@17 '=' expr .

    $default  reduce using rule 68 (expr)


State 169

   28 param_decl: type_specifier pointers ID '[' INTEGER_CONST ']' .

    $default  reduce using rule 28 (param_decl)


State 170

   32 def: type_specifier pointers ID '[' INTEGER_CONST ']' ';' .

    $default  reduce using rule 32 (def)


State 171

   59 stmt: WRITE_INT '(' unary ')' ';' .

    $default  reduce using rule 59 (stmt)


State 172

   60 stmt: WRITE_CHAR '(' unary ')' ';' .

    $default  reduce using rule 60 (stmt)


State 173

   61 stmt: WRITE_STRING '(' unary ')' ';' .

    $default  reduce using rule 61 (stmt)


State 174

   64 if_stmt: IF @15 '(' expr ')' . $@16 stmt

    $default  reduce using rule 63 ($@16)

    $@16  go to state 179


State 175

   51 stmt: WHILE @9 '(' expr ')' . $@10 stmt

    $default  reduce using rule 50 ($@10)

    $@10  go to state 180


State 176

   56 stmt: FOR $@11 '(' expr_e ';' . @12 expr_e ';' $@13 expr_e ')' $@14 stmt

    $default  reduce using rule 53 (@12)

    @12  go to state 181


State 177

  105 args: args ',' . expr

    '&'            shift, and go to state 53
    '-'            shift, and go to state 54
    '*'            shift, and go to state 55
    '!'            shift, and go to state 56
    INCOP          shift, and go to state 57
    DECOP          shift, and go to state 58
    '('            shift, and go to state 59
    READ_INT       shift, and go to state 63
    READ_CHAR      shift, and go to state 64
    ID             shift, and go to state 65
    NULL_          shift, and go to state 66
    STRING         shift, and go to state 73
    INTEGER_CONST  shift, and go to state 74
    CHAR_CONST     shift, and go to state 75

    expr      go to state 182
    or_expr   go to state 82
    or_list   go to state 83
    and_expr  go to state 84
    and_list  go to state 85
    binary    go to state 86
    unary     go to state 87


State 178

  100 unary: unary '(' @18 args ')' .

    $default  reduce using rule 100 (unary)


State 179

   64 if_stmt: IF @15 '(' expr ')' $@16 . stmt

    '&'            shift, and go to state 53
    '-'            shift, and go to state 54
    '*'            shift, and go to state 55
    '!'            shift, and go to state 56
    INCOP          shift, and go to state 57
    DECOP          shift, and go to state 58
    '('            shift, and go to state 59
    WRITE_INT      shift, and go to state 60
    WRITE_CHAR     shift, and go to state 61
    WRITE_STRING   shift, and go to state 62
    READ_INT       shift, and go to state 63
    READ_CHAR      shift, and go to state 64
    ID             shift, and go to state 65
    NULL_          shift, and go to state 66
    RETURN         shift, and go to state 67
    IF             shift, and go to state 68
    WHILE          shift, and go to state 69
    FOR            shift, and go to state 70
    BREAK          shift, and go to state 71
    CONTINUE       shift, and go to state 72
    STRING         shift, and go to state 73
    INTEGER_CONST  shift, and go to state 74
    CHAR_CONST     shift, and go to state 75
    ';'            shift, and go to state 76
    '{'            shift, and go to state 20

    compound_stmt  go to state 78
    stmt           go to state 183
    if_stmt        go to state 80
    expr           go to state 81
    or_expr        go to state 82
    or_list        go to state 83
    and_expr       go to state 84
    and_list       go to state 85
    binary         go to state 86
    unary          go to state 87


State 180

   51 stmt: WHILE @9 '(' expr ')' $@10 . stmt

    '&'            shift, and go to state 53
    '-'            shift, and go to state 54
    '*'            shift, and go to state 55
    '!'            shift, and go to state 56
    INCOP          shift, and go to state 57
    DECOP          shift, and go to state 58
    '('            shift, and go to state 59
    WRITE_INT      shift, and go to state 60
    WRITE_CHAR     shift, and go to state 61
    WRITE_STRING   shift, and go to state 62
    READ_INT       shift, and go to state 63
    READ_CHAR      shift, and go to state 64
    ID             shift, and go to state 65
    NULL_          shift, and go to state 66
    RETURN         shift, and go to state 67
    IF             shift, and go to state 68
    WHILE          shift, and go to state 69
    FOR            shift, and go to state 70
    BREAK          shift, and go to state 71
    CONTINUE       shift, and go to state 72
    STRING         shift, and go to state 73
    INTEGER_CONST  shift, and go to state 74
    CHAR_CONST     shift, and go to state 75
    ';'            shift, and go to state 76
    '{'            shift, and go to state 20

    compound_stmt  go to state 78
    stmt           go to state 184
    if_stmt        go to state 80
    expr           go to state 81
    or_expr        go to state 82
    or_list        go to state 83
    and_expr       go to state 84
    and_list       go to state 85
    binary         go to state 86
    unary          go to state 87


State 181

   56 stmt: FOR $@11 '(' expr_e ';' @12 . expr_e ';' $@13 expr_e ')' $@14 stmt

    '&'            shift, and go to state 53
    '-'            shift, and go to state 54
    '*'            shift, and go to state 55
    '!'            shift, and go to state 56
    INCOP          shift, and go to state 57
    DECOP          shift, and go to state 58
    '('            shift, and go to state 59
    READ_INT       shift, and go to state 63
    READ_CHAR      shift, and go to state 64
    ID             shift, and go to state 65
    NULL_          shift, and go to state 66
    STRING         shift, and go to state 73
    INTEGER_CONST  shift, and go to state 74
    CHAR_CONST     shift, and go to state 75

    $default  reduce using rule 66 (expr_e)

    expr_e    go to state 185
    expr      go to state 163
    or_expr   go to state 82
    or_list   go to state 83
    and_expr  go to state 84
    and_list  go to state 85
    binary    go to state 86
    unary     go to state 87


State 182

  105 args: args ',' expr .

    $default  reduce using rule 105 (args)


State 183

   64 if_stmt: IF @15 '(' expr ')' $@16 stmt .

    $default  reduce using rule 64 (if_stmt)


State 184

   51 stmt: WHILE @9 '(' expr ')' $@10 stmt .

    $default  reduce using rule 51 (stmt)


State 185

   56 stmt: FOR $@11 '(' expr_e ';' @12 expr_e . ';' $@13 expr_e ')' $@14 stmt

    ';'  shift, and go to state 186


State 186

   56 stmt: FOR $@11 '(' expr_e ';' @12 expr_e ';' . $@13 expr_e ')' $@14 stmt

    $default  reduce using rule 54 ($@13)

    $@13  go to state 187


State 187

   56 stmt: FOR $@11 '(' expr_e ';' @12 expr_e ';' $@13 . expr_e ')' $@14 stmt

    '&'            shift, and go to state 53
    '-'            shift, and go to state 54
    '*'            shift, and go to state 55
    '!'            shift, and go to state 56
    INCOP          shift, and go to state 57
    DECOP          shift, and go to state 58
    '('            shift, and go to state 59
    READ_INT       shift, and go to state 63
    READ_CHAR      shift, and go to state 64
    ID             shift, and go to state 65
    NULL_          shift, and go to state 66
    STRING         shift, and go to state 73
    INTEGER_CONST  shift, and go to state 74
    CHAR_CONST     shift, and go to state 75

    $default  reduce using rule 66 (expr_e)

    expr_e    go to state 188
    expr      go to state 163
    or_expr   go to state 82
    or_list   go to state 83
    and_expr  go to state 84
    and_list  go to state 85
    binary    go to state 86
    unary     go to state 87


State 188

   56 stmt: FOR $@11 '(' expr_e ';' @12 expr_e ';' $@13 expr_e . ')' $@14 stmt

    ')'  shift, and go to state 189


State 189

   56 stmt: FOR $@11 '(' expr_e ';' @12 expr_e ';' $@13 expr_e ')' . $@14 stmt

    $default  reduce using rule 55 ($@14)

    $@14  go to state 190


State 190

   56 stmt: FOR $@11 '(' expr_e ';' @12 expr_e ';' $@13 expr_e ')' $@14 . stmt

    '&'            shift, and go to state 53
    '-'            shift, and go to state 54
    '*'            shift, and go to state 55
    '!'            shift, and go to state 56
    INCOP          shift, and go to state 57
    DECOP          shift, and go to state 58
    '('            shift, and go to state 59
    WRITE_INT      shift, and go to state 60
    WRITE_CHAR     shift, and go to state 61
    WRITE_STRING   shift, and go to state 62
    READ_INT       shift, and go to state 63
    READ_CHAR      shift, and go to state 64
    ID             shift, and go to state 65
    NULL_          shift, and go to state 66
    RETURN         shift, and go to state 67
    IF             shift, and go to state 68
    WHILE          shift, and go to state 69
    FOR            shift, and go to state 70
    BREAK          shift, and go to state 71
    CONTINUE       shift, and go to state 72
    STRING         shift, and go to state 73
    INTEGER_CONST  shift, and go to state 74
    CHAR_CONST     shift, and go to state 75
    ';'            shift, and go to state 76
    '{'            shift, and go to state 20

    compound_stmt  go to state 78
    stmt           go to state 191
    if_stmt        go to state 80
    expr           go to state 81
    or_expr        go to state 82
    or_list        go to state 83
    and_expr       go to state 84
    and_list       go to state 85
    binary         go to state 86
    unary          go to state 87


State 191

   56 stmt: FOR $@11 '(' expr_e ';' @12 expr_e ';' $@13 expr_e ')' $@14 stmt .

    $default  reduce using rule 56 (stmt)
